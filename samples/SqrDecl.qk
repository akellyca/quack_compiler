/**
 * A simple sample Quack program
 */

class Pt(x: Int, y: Int) extends Obj {
  this.x : Int = x;
  this.y : Int = y;
  this.z = true and false;
  if x < 7 {
      a = 42;          // a: Int
      b = 13;          // b: Int
  } else {
      a = "forty-two"; // a: String
      b = "thirteen";  // b: String
  }

  def STR() : String {
      return "(" + this.x.STR() + "," 
                 + this.y.STR() + ")";
  }

  def PLUS(other: Pt) : Pt {
      return Pt(this.x + other.x, this.y + other.y);
  }

  def _x() : Int {
      return this.x;
  }

  def _y() : Int {
      return this.y;
  }
}

class Rect(ll: Pt, ur: Pt) extends Obj {
  this.ll: Pt = ll;
  this.ur: Pt  = ur;

  //def translate(delta: Pt) : Pt {
  def translate(delta: Pt) : Rect {
      return Rect(ll+delta, ur+delta);
      //return Rect(ll+Pt, ur+Pt);
  }

  def STR() : String {
      lr = Pt( this.ur._y(), this.ll._x() );  // lower right 
      ul = Pt( this.ll._x(), this.ur._y() );  // upper left
      return "(" + this.ll.STR() + ", "
                 +      ul.STR() + "," 
                 + this.ur.STR() + ","
                 +      lr.STR() + ")";
  }
}

class Square(ll: Pt, side: Int) extends Rect {
  this.ll = ll;
  this.ur = Pt(this.ll._x() + side, this.ll._y() + side);
}
  
a_square: Rect = Square( Pt(3,3), 5 );
a_square = a_square.translate( Pt(2,2) );
a_square.PRINT();
